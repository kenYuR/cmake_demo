cmake_minimum_required(VERSION 3.0)

project(mytest)

if(ARCH STREQUAL "ARMEABI")
    MESSAGE("-----set armeabi-----")
    SET(CMAKE_SYSTEM_NAME Linux)
    SET(TOOLCHAIN_DIR "/root/myPro/branch/project_new/android/pro/android-ndk-r10d/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86/bin")
    SET(CMAKE_C_COMPILER ${TOOLCHAIN_DIR}/arm-linux-androideabi-gcc)
    SET(CMAKE_C_FLAGS "-O3 -fpic -fasm -fno-short-enums -marm -g")
    SET(SYSROOT "/root/myPro/branch/project_new/android/pro/android-ndk-r10d/platforms/android-19/arch-arm/usr")
    INCLUDE_DIRECTORIES(${SYSROOT}/include)
    LINK_DIRECTORIES(${SYSROOT}/lib)
elseif(ARCH STREQUAL "ARMV7_NEON")
    MESSAGE("-----set armv7_neon-----")
    SET(CMAKE_SYSTEM_NAME Linux)
    SET(TOOLCHAIN_DIR "/root/myPro/branch/project_new/android/pro/android-ndk-r10d/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86/bin")
    SET(CMAKE_C_COMPILER ${TOOLCHAIN_DIR}/arm-linux-androideabi-gcc)
    SET(CMAKE_C_FLAGS "-mfloat-abi=softfp -mfpu=neon -marm -march=armv7-a -mtune=cortex-a8")
    SET(SYSROOT "/root/myPro/branch/project_new/android/pro/android-ndk-r10d/platforms/android-19/arch-arm/usr")
    INCLUDE_DIRECTORIES(${SYSROOT}/include)
    LINK_DIRECTORIES(${SYSROOT}/lib)
elseif(ARCH STREQUAL "ARMV7_VFPV3")
    MESSAGE("-----set armv7_vfpv3-----")
    SET(CMAKE_SYSTEM_NAME Linux)
    SET(TOOLCHAIN_DIR "/root/myPro/branch/project_new/android/pro/android-ndk-r10d/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86/bin")
    SET(CMAKE_C_COMPILER ${TOOLCHAIN_DIR}/arm-linux-androideabi-gcc)
    SET(CMAKE_C_FLAGS "-mfloat-abi=softfp -mfpu=vfpv3-d16 -marm -march=armv7-a")
    SET(SYSROOT "/root/myPro/branch/project_new/android/pro/android-ndk-r10d/platforms/android-19/arch-arm/usr")
    INCLUDE_DIRECTORIES(${SYSROOT}/include)
    LINK_DIRECTORIES(${SYSROOT}/lib)
elseif(ARCH STREQUAL "ARM64_V8A")
    MESSAGE("-----set arm64_v8a-----")
    SET(CMAKE_SYSTEM_NAME Linux)
    SET(TOOLCHAIN_DIR "/root/myPro/branch/project_new/android/pro/android-ndk-r10d/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86/bin")
    SET(CMAKE_C_COMPILER ${TOOLCHAIN_DIR}/aarch64-linux-android-gcc)
    SET(CMAKE_C_FLAGS "-march=armv8-a")
    SET(SYSROOT "/root/myPro/branch/project_new/android/pro/android-ndk-r10d/platforms/android-21/arch-arm64/usr")
    INCLUDE_DIRECTORIES(${SYSROOT}/include)
    LINK_DIRECTORIES(${SYSROOT}/lib)
elseif(ARCH STREQUAL "AND_X86")
    MESSAGE("-----set android x86-----")
    SET(CMAKE_SYSTEM_NAME Linux)
    SET(TOOLCHAIN_DIR "/root/myPro/branch/project_new/android/pro/android-ndk-r10d/toolchains/x86-4.9/prebuilt/linux-x86/bin")
    SET(CMAKE_C_COMPILER ${TOOLCHAIN_DIR}/i686-linux-android-gcc)
    SET(CMAKE_C_FLAGS "-march=i686")
    SET(SYSROOT "/root/myPro/branch/project_new/android/pro/android-ndk-r10d/platforms/android-19/arch-x86/usr")
    INCLUDE_DIRECTORIES(${SYSROOT}/include)
    LINK_DIRECTORIES(${SYSROOT}/lib)
elseif(ARCH STREQUAL "AND_X86_64")
    MESSAGE("-----set android x86_64")
    SET(CMAKE_SYSTEM_NAME Linux)
    SET(TOOLCHAIN_DIR "/root/myPro/branch/project_new/android/pro/android-ndk-r10d/toolchains/x86_64-4.9/prebuilt/linux-x86/bin")
    SET(CMAKE_C_COMPILER ${TOOLCHAIN_DIR}/x86_64-linux-android-gcc)
    SET(CMAKE_C_FLAGS "-march=x86-64")
    SET(SYSROOT "/root/myPro/branch/project_new/android/pro/android-ndk-r10d/platforms/android-21/arch-x86_64/usr")
    INCLUDE_DIRECTORIES(${SYSROOT}/include)
    LINK_DIRECTORIES(${SYSROOT}/lib)
elseif(ARCH STREQUAL "MIPS")
    MESSAGE("-----set mips-----")
    SET(CMAKE_SYSTEM_NAME Linux)
    SET(TOOLCHAIN_DIR "/root/myPro/branch/project_new/android/pro/android-ndk-r10d/toolchains/mipsel-linux-android-4.9/prebuilt/linux-x86/bin")
    SET(CMAKE_C_COMPILER ${TOOLCHAIN_DIR}/mipsel-linux-android-gcc)
    SET(CMAKE_C_FLAGS "-march=mips32 -mfp32 -mhard-float")
    SET(SYSROOT "/root/myPro/branch/project_new/android/pro/android-ndk-r10d/platforms/android-19/arch-mips/usr")
    INCLUDE_DIRECTORIES(${SYSROOT}/include)
    LINK_DIRECTORIES(${SYSROOT}/lib)
elseif(ARCH STREQUAL "MIPS64")
    MESSAGE("-----set mips64-----")
    SET(CMAKE_SYSTEM_NAME Linux)
    SET(TOOLCHAIN_DIR "/root/myPro/branch/project_new/android/pro/android-ndk-r10d/toolchains/mips64el-linux-android-4.9/prebuilt/linux-x86/bin")
    SET(CMAKE_C_COMPILER ${TOOLCHAIN_DIR}/mips64el-linux-android-gcc)
    SET(CMAKE_C_FLAGS "-march=mips64r6")
    SET(SYSROOT "/root/myPro/branch/project_new/android/pro/android-ndk-r10d/platforms/android-21/arch-mips64/usr")
    INCLUDE_DIRECTORIES(${SYSROOT}/include)
    LINK_DIRECTORIES(${SYSROOT}/lib)
else()
    MESSAGE("-----set x86-----")
endif()

configure_file(mytestConfig.h.in mytestConfig.h)
configure_file(mytest.h.in mytest.h)

AUX_SOURCE_DIRECTORY(. DIR_SOURCE)

add_library(mytest STATIC ${DIR_SOURCE})

target_include_directories(mytest PUBLIC "${PROJECT_BINARY_DIR}")
